Apply Config Template

v33
	- First version shared
v36
	- Now supports any Family of devices.
	- Check is made for lookup in csvVarLookup
v38
	- Commands ending with "\ny" were not processed correctly if the template text file was in DOS format
	- Updated CLI functions, which can now handle error message false positives
v40
	- Added logic to process #if/#elseif/#else/#end Cisco velocity type statements
v42
	- Added logic to process #error fail|stop|continue
v48
	- Added input to gracefully skip execution if device not found in CSV file
v54
	- Added ability to change the accpeted CSV delimiter character; this can now be set in the
	  new const_CSV_DELIMITER workflow variable
	- Added MAC address as device lookup in CSV file
	- Site and CSV variable names can now include the "-" character
	- Now automatically enters config context on applicable family types
v56
	- On completion workflow now triggers device rediscovery and config reload via XIQ-SE API
v57
	- Function to read CSV file now tolerates empty lines in CSV file as well as spaces before/after
	  commas/values are now stripped
v61
	- Was not working on Product Families other than: VSP Series, Summit Series, ERS Series and ISW Series
	- Added basic commands to enable PrivExec, and Config mode for Family "200 Series"
	- Added basic commands to enable no paging for Family "ISW-Series"
v62
	- Updated to latest library functions; can now accept CLI commands with feed data, separated by "//"
v64
	- Added support for block statements in config template which allow for sending commands which would otherwise
	  temporarily compromise SSH/Telnet connectivity to the switch
	  #block start [n]  : Mark the beginning of a block of commands which will need to be sourced locally on the switch
	                      [n] = Optional number of seconds to sleep after block execution
	  #block execute [n]: Mark the end of block of commands which are to sourced locally on the switch
	                      If this directive is not seen, and the "#block start" was seen, all commands from the start of
	                      block section to the last command in the template file will be sourced locally on the switch
	                      [n] = Optional number of seconds to sleep after block execution
	- Added to variable const_EXPORT_EMC_VARS these additional emc_vars keys: deviceName, deviceSoftwareVer, deviceSysOid,
	 deviceType, family, ports
v65
	- Removed from variable const_EXPORT_EMC_VARS key "ports" as it is not available anyway
	- warpBuffer_execute() was failing to retrieve the TFTP file if username contained "@" character
v67
	- Added support for path variables %rootDir%, %sitePath% and %siteName% on CSV and config template file inputs
	- CSV parsing code is now forgiving with invalid CSV files where an entry has less records than declared in the top row
v71
	- Block statements no longer temporarily enable tftpd on VOSS
	- Improved debug messages
v81
	- CSV file can now be primed to fetch a "peer" device for the same variables. Row 0 Column 0 can now accept ":<var>"
	  suffix. Within the CSV file two entries can be fetched if they have the same value of var. The prime lookup entry
	  will have variables $<varX> and the peer entry same value can be fetched with $<peer:varX>
	- Velocity parsing error reporting improved
v82
	- Fix to CSV "peer" device lookup; if lookup device has no value for ":<var>" then no peer device is sought
	- If the CSV file is an empty file, now a meaningful error message is generated
v83
	- Added support for #eval embedded command
v88
	- Added device notes input field and added to variable const_EXPORT_EMC_VARS additional emc_vars key "date"
v89
	- #if/#elseif/#else/#end statements can now be nested
	- If tab characters are used for indentation in the template file, these will now be removed in the final config 
	- #eval command can now be used to set variable values using syntax: #eval varname=()
	- Variables set with #eval varname=() can be de-refenced anywhere in the template (including in #if, #elseif & #eval
	  evaluations) as $[varname] using square brackets
	- ASCII Config Template input can now also contain a CSV variable in the format $<var> or $(var); this can allow
	  a different config template file to be used as specified for the device in the CSV file
	- New #sleep <sec> statement to introduce a delay (does not work inside #block statements)
	- New #last statement allows not waiting for CLI prompt on last command in config template
v90
	- Fixes to $[varname] processing within #if/#elseif/#else/#end nested logic
	- Improved debugging messages
v91
	- #last statement can now also be placed in line right before #block execute
v94/1.01
	- Changed workflow so that it can take the data for the $<variables> not from a CSV file but directly from
	  either another activity added to the workflow, or by calling this workflow via NBI call. In both cases
	  the new workflow variable wrkfl_deviceJsonData just needs to be set in JSON format to the equivalent data
	  that is extracted from the CSV file; this is so that some customers can hook up the workflow directly with
	  their IPAM database instead of using a CSV file.
	- Python within activities is now versioned, since people are taking the Python code and using it within their
	  own, different workflows
	- Python within activities are now able to set their own const_xxx variables to defaults even if those variables
	  are not defined under workflow variables; for same reason, people are taking the Python code and using it within
	  their own, different workflows which may not have those variables set
	- CLI functions enhances so that failure to connect at first attempt no longer makes the entire workflow fail.
	  Now the CLI will retry by default 6 times at 10 sec intervals; so will only fail if no CLI connection can be
	  established after 1min and 10sec. Defaults can be changed with variables const_CLI_RETRIES and const_CLI_RETRY_DELAY
v97/1.02
	- CSV $<variable> values read infrom CSV file now have double quotes automatically removed; using double quotes on
	  CSV input values is required when the value includes the CSV record separator character (comma), like for instance
	  providing a list of ports
	- Added to variable const_EXPORT_EMC_VARS additional emc_vars key deviceNosId
v98/1.05
	- Nested #if/#elseif statements being skipped, because within an #if/#elseif/#else/#end block that evaluated false,
	  would still try and evaluate their condition, and this could fail if an undefined #eval variable was used there
	- #eval() pragmas were not working if more than one was included on the same line
v99/1.06
	- Config template file is now read in line by line and if any lines are found to contain non-ASCII characters
	  the workflow reports those line numbers and fails with a meaningful error message
	- Workflow will now error if it is unable to obtain the device's serial number or MAC address from XIQ-SE NBI; this
	  is sometimes seen, if this workflow is called by one of the "Onboard Mgmt VLAN/CLIP/etc" workflows which delete
	  and re-add the device into XIQ-SE, and it seems XIQ-SE takes some time before it re-populates that data; use the
	  const_FOLLOW_WORKFLOW_DELAY variable on those preceding workflows to increase the delay before running this workflow
	- CSV now also extracts the device's lookup (serial number or MAC address) to be used as $<> variable
	- If input data is fed into variable wrkfl_deviceJsonData, the lookup index is extracted from the same data, under
	  key ["__LOOKUP__"], if present in the data; else it is obtianed from workflow inputs and NBI lookup as usual
v100/1.07
	- Family type can now be fed into variable wrkfl_deviceFamily by calling workflow; this allows the workflow to be
	  able to run even the family type of the device has not yet been set by XIQ-SE, for example if the calling workflow
	  is one of Onboard Mgmt VLAN/CLIP/etc.. which has just re-added the device to XIQ-SE before calling this workflow
v101/1.08
	- Enhanced block execution syntax with "#block execute [wait|reconnect] [n]"; "wait" is same as before, in that
	  [n] secs are waited and then the same CLI session is resumed; "reconnect" is new; this will now tear down the CLI
	  session, after the [n] secs wait, and will then re-start a new CLI session (leveraging const_CLI_RETRIES and
	  const_CLI_RETRY_DELAY)
v102/1.10
	- If a key listed in variable const_EXPORT_EMC_VARS is found to not exist in emc_vars, now a warning message is
	  displayed, instead of failing the workflow. For some of the default keys ("deviceName","deviceSysOid","deviceType",
	  "family",..) this can happen if this workflow is called by one of the Onboard Mgmt VLAN/CLIP/etc.. workflows
	  right after these have re-added the device to XIQ-SE, and XIQ-SE has not had enough time to fully re-discover the
	  device and set those emc_vars keys. If this workflow is not actually using any of those keys as site variables in
	  the template file, it made no sense to fail the workflow. However, if the template file does need to use those keys
	  then the workflow will still fail when the variable needs to be replaced; in this case consider increasing the
	  const_FOLLOW_WORKFLOW_DELAY variable on the calling Onboard Mgmt VLAN/CLIP/etc.. workflow to give XIQ-SE enough
	  time to re-discover the device
v103/1.11 - posted
	- Debug logging moved to /dev/shm as with large templates and debug enabled, the maximum size of the activity log
	  could be exhausted

Todo:

Onboard VSP

v55
v57
v59
	- Auto-sense Data I-sid config now takes care of creating platform VLAN in activity 04
	- Auto-sense Data I-sid config performed in activity 05 if possible
	- Activity 05 now checks the software for a non-committed software, and commits if necessary before rebooting
	- Activity 05 now also deletes the auto-sense ISIS hello auth encrypted key file before reooting
	- Activity 01 now able to read site global custom variables, if a site-specific one does not exist
	- Activity 01 now handles null values from custom variables
v61
	- Activity 05 was not correctly matching uncommited software from pre8.2 to post8.2
v63
	- Activity 02 now also globally enables radius accounting on switch
v65
	- Activity 02, running on already configured switch, deletion of radius servers errors if accounting is enabled
	- Activity 02, accounting must be enabled after a delay from enabling radius servers
	- Activity 04, check prior existance of auto-sense voice & data i-sids and clear settings before setting again
	- Activity 04, a platform VLAN is now automatically allocated for untagged auto-sense voice i-sid on regular BEB
	- Activity 04, allocated platform VLANs for auto-sense data i-sid and untagged voice i-sid are named accordingly
v75
	- Activity 01, readSiteCustomVariables() v3; read variables up site parents
	- Activity 01 & 03 update nbi mutations with new nbiQuery() and nbiMutation() v2
	- Activity 01 ${vars} can now get used on the additional CLI script
	- Activities 02,04,05 disable more paging on VSP from start
	- Activity 02 added input to create RADIUS server for cli+web in addition to eapol
	- Activities 01,02 ability to handle RADIUS server creation/deletion also for cli & web 
	- Activity 02, increase sleep timer to 2 secs before enabling radius accounting
v77
	- Activity 01, validation of RADIUS secret, must not contain '?' and max 32 characters
	- Activity 02, configuration of RADIUS secret is now quoted (key can now contain spaces)
	- Activity 03, when adding switch to a NAC location group, it is added for Any interface
v79
	- Activities 02,04,05 config_term & end are now sent with sendCLI_configCommand()
	- Activity 04, was trying to create platform VLANs on DVR Leaf, if the workflow was re-executed on the same switch
	  a second time; this was obviuosly failing
	- Activity 05 changed order of commands appended to config.cfg; dvr leaf is now set first, otherwise the auto-sense
	  data i-sid and untagged voice i-sid commands fail to get set, dur to missing platform vlan
	- Activity 04, was not detecting an already set auto-sense data i-sid
	- Activity 02 increased sleep timer from 2 to 4sec, before activating RADIUS accounting
	- Activity 04 when both data i-sid and isis hello auth are set, now sets data i-sid after setting the isis hello auth
v81
	- Activity 04 was no longer detecting existing auto-sense voice i-sid with 8.4.2.x due to CLI output changes
	- Workflow inputs, additional CLI commands field, now has commented out example of Upnp ACL filter for DVR Leaf
v83
	- Activity 04; removed code which was globally shutting down ISIS when activating the ISIS Hello Auth key
	- Activity 02; increased sleep timer before enabling radius accounting from 4sec to 8sec
v85
	- Activity 02 disabling/enabling radius accounting command is now wrapped in a loop to retry up 10 times at 4 sec
	  delay, until the command succeeds without an error
	- Activity 05; additional 20sec delay before converting switch into DVR-Leaf mode
	- Added "Fabric Engine" as workflow supported Network OS together with existing VOSS
v91
	- Documented how to set a NAC Engine as Primary RADIUS server when configuring the switch
	- Added better versioning; now the workflow version is displayed in the output log of all activities
	- Added support for Auto-Sense WAP-Type1 I-SID/VLAN-id and Wait-Interval
	- Improved the workflow reported messages, at workflow level, activity level and device level, including errors
v97
	- Updated all function libraries
	- Added more combinations for RADIUS server use-by values
	- Added variable const_cliCmdsFailOnError to control whether workflow should fail on user CLI commands error
	- Added variable const_cliCmdsSkipOnError to control whether to skip rest of user CLI commands on error 
v99
	- MakeVspDvrLeaf_05; now attempts to enable DVR Leaf without doing a switch reboot
v100
	- MakeVspDvrLeaf_05; now deletes any non-default platform VLANs, which might have got added by ZTP+ onboarding
	  so as to be able to enter DVR Leaf mode without any switch reset
v101
	- Updated all functions; activity 4 can now use embedded directives #error and #block in the CLI commands
	- Activity 03 now adds the switch to Access Control with Auth Access Type = Manual RADIUS Configuration
	  previously it was incorrectly setting Auth Access Type = Network Access
	- ReadSiteInputs_01: Was failing if no Control Engines found in XIQ-SE, even if the NAC enable input was disabled
	- Activity 04 was incorrectly trying to create auto-sense platform VLANs when run against a DVR Leaf without
	  enabling the DVR Leaf input
v102
	- If configuring NAC on switch, globally enabling RADIUS now happens at the very end of the workflow, as otherwise
	  some RADIUS authentications could create dynamic VLANs on the switch even before the Custom CLI commands can get
	  executed to make those VLANs static. Also if setting RADIUS CLI authentication, this ensures the workflow can
	  complete without requiring any RADIUS CLI authentications for itself SSH-ing into the switch
v103
	- Activity 04 was failing to create auto-sense data/voice/wap platform VLAN, if another VLAN already existed on
	  the switch with the same name the activity was trying to set on the newly created VLAN; added logic to default
	  conflicting names and the activity can no longer fail when setting the VLAN name
v104
	- Activity 05 was failing to convert the switch to DVR Leaf if the switch already had a mgmt VLAN on a VLAN-id
	  other than the default 4048, because it was trying to delete that VLAN and failing
v105
	- Activity 04 was failing to configure the auto-sense FA auth key
v106
	- MakeVspDvrLeaf_05 when trying to delete non-default platform VLANs could fail to delete a VLAN if ZIQ-SE 23.4
	  or later ZTP+ created the VLAN as an auto-sense I-SID. The workflow would fail and not enable DVR Leaf on the
	  switch. Now the workflow will not fail, and will resort to activating DVR Leaf via a switch reboot.
v112
	- Added optional CSV file so $<csv-variable> in addition to ${site-custom-variable}
	- CSV variables also work in format $(csv-variable) as carets are not allowed in combo box inputs
	- Added activity 06 with ability to add switch to Policy Domain as well as Policy VLAN Island Topology
	- Activity 04 under additional CLI commands has commented out exemple of how to set EDM user passwords from there
	- Activity 04 additional CLI commands now only processes commands which are not commented out
	- Activity 04 additional CLI commands can now process commands with // to feed passwords to interactive prompts
	- Variable const_cliCmdsSkipOnError, for execution of optional CLI commands, now defaults to false
	- Activity 02 when configuring RADIUS on switch, will now always configure "radius reachability mode status-server"
	- Updated all functions
v113
	- Updated all functions (# CSV data input was buggy)
	- Was failing to load CSV variables, $<csv-variable>, due to missing workflow variable const_CSV_DELIMITER
	- AddToPolicy_06: Introduced a 5 secs sleep timer before enforcing the Policy Domain
v115
	- Workflow now has input for switch system-name to configure
v118
	- If NAC Engine Group configured with External Load Balancers, now configures Load Balancer IPs as RADIUS server
	  on the switch instead of actual NAC Engine IPs
	- Added ability to execute a follow on workflow 
v126
	- Fixed issue with follow-on workflow which was not working at all
	- Changed the logic used with NAC External Load Balancers; if these are found to be set, the switches are configured
	  with the load balancer IPs as RADIUS servers, but the dynamic RADIUS client entries are still configured using the 
	  actual NAC engine IPs
	- If, with load balancers with NAC, we have more than 2 NAC engine IPs to configure as dynamic RADIUS clients,
	  error checking is disabled after configuring the 1st two dynamic RADIUS clients; this is because VOSS today can
	  only configure at most 2 dynamic clients, but newer versions will support more; hence making the workflow future
	  proof now
	- As only two dynamic RADIUS clients might be configurable on VOSS, there is a way to ensure that the NAC Engines
	  associated with the primary NAC Load Balancer are the first to be configured; to achieve this, add the Load Balancer
	  to XIQ-SE and under Device Annotation, set UserData#1 to "Primary" and UserData#2 to "Pool = <1st IP>, <2nd IP>"
v127
	- Configuration of 3rd and above dynamic RADIUS clients was not skipping error checking as intended
v129
	- Policy Domain Enforcement was failing, if the workflow was executed as part of onboarding Site Actions. There is
	  now a requirement to add user "NetSightUser" to the "XIQ-SE Administrator" Authorization Group to solve this; added
	  documentation to workflow inputs under Policy Notes
	- Policy Domain Enforcement now has logic to try several times with both delay and retries configurable in workflow
	  variables const_POLICY_ENFORCE_DELAY & const_POLICY_ENFORCE_RETRIES
	- Error message for Policy Mutations is now handled correctly
	- Workflow now errors immediately if NAC enabled and no RADIUS secret key provided
v131
	- Added new commented commands to proposed addional CLI commands input, to remove SNMPv2 default community strings
	  and to enable RADIUS CLI profile; and added quotes to snmp-server location "$<Location>"
	- Clarified comment for follow on workflow input from path/name to category/name
v133
	- Activity AddVspNacEngine_03 now adds switch to Access Control location group with interface set to "Any", no longer
	  "Wired"
v134
	- RADIUS accounting is now not enabled unless one of RADIUS use-by in "eapol", "cli" or "web", otherwise this was
	  causing the workflow to fail
v135
	- Activity 02 when trying to disable RADIUS accounting no longer errors if the switch complains that accounting cannot
	  be disabled due to no eapol/cli/web servers
	- Activity 03 now waits const_NAC_ENGINE_ENFORCE_DELAY seconds before doing a NAC Engine Enforce; that way if
	  workflow was run against multiple switches, the first enforce will apply to all switches added
v137
	- Fix in v133 was incorrect for activity AddVspNacEngine_03 now adds switch to Access Control location group with
	  interface set to "Any", no longer "Wired"; the proper API call is now used
	- Fix to CLI regex pattern to capture VLAN ids and associated I-SIDs
	- Add to Policy activity now implements locks, so workflow can now be run against multiple switches
	- Parsing of CLI commands was incorrectly stripping #error pragma commands
	- Cisco velocity type #if/#elseif/#else/#end statements are now allowed in additional CLI commands box
	- CSV parsing code is now forgiving with invalid CSV files where an entry has less records than declared in the top row
v138
	- Debug of add to policy activity now includes time stamps
	- Lock reservation increased to 120 sec, to take into account possible 60 sec to acquire policy NBI lock
	- Failure to acquire policy NBI lock, now removes general lock
v141
	- Add to Policy activity now has a variable const_POLICY_ENFORCE to control whether a policy domain enforce is performed
	  at the end of the activity or not. By default set to true
	- Add to Policy activity now has a variable const_POLICY_START_DELAY which implements a delay before starting the policy
	  configuration via NBI API; can be used if many instances of workflow expected to run simultaneously. By default set to
	  5 sec
	- Lock reservation is now 100 sec + any applicable const_POLICY_START_DELAY or const_POLICY_ENFORCE_DELAY *
	  const_POLICY_ENFORCE_RETRIES
	- Add to Policy activity now closes the policy domain if it finds the switch already in the requested VLAN island
v143
	- Updated all functions
v147
	- Added variable const_FOLLOW_WORKFLOW_DELAY to be able to add a delay before calling follow on workflow
	- Added variable const_EXPORT_EMC_VARS which can be populated with emc_vars keys to make available
	  in ${<varname>} variables; these variables can be used in the Additional CLI commands input box
	- Workflow input "NAC Engine Group name" is now renamed to "NAC Engine Group name or Engine IP list" as it can now
	  either take an Engine Group Name as before or a list of Engine IP addresses which is new; the new syntax can be
	  used to override the normal logic of deriving the Engine IPs from the Engine Group Name via API lookup
v152
	- Add to Policy activity, if const_POLICY_ENFORCE is at default true, will now only do a Policy Enforce if it sees
	  that there are no other instances queuing up to take the lock for the same Policy add config on other switches;
	  this allows us to only perform 1 Policy Domain Enforce, at the very end, after the last switch gets added
	- Added support for path variables %rootDir%, %sitePath% and %siteName% on CSV file input
	- Ability to parse #if/#elseif/#else/#end, #eval, #sleep, #last statements in additional CLI commands input
	- Input validation cleaned up; workflow was failing on NAC inputs even if NAC was disabled
v155
	- Correction to Additional CLI commands default inupt
	- Updated all function libraries
v156
	- Workflow can now configure more than two and up to four RADIUS servers per switch. The VOSS max number of RADIUS
	  servers being 10, across all the used-by use caases : eapol, cli, web, endpoint-tracking, snmp
	- Access Control Enforce now is done only by last activity gaining an exclusive lock and seeing that no further
	  instances queuing up to take the same lock; basically the same approach used for doing a Policy Domain Enforce.
v157
	- Workflow was not configuring the auto-sense voice i-sid untagged if the VLAN-id was not provided
v161
	- Python within activities is now versioned, since people are taking the Python code and using it within their
	  own, different workflows
	- Python within activities are now able to set their own const_xxx variables to defaults even if those variables
	  are not defined under workflow variables; for same reason, people are taking the Python code and using it within
	  their own, different workflows which may not have those variables set
	- Policy APIs have their own locking mechanism. The API to grab the lock has a force option. Originally this
	  workflow would try to get the lock initially without forcing, and would only force if it could see no other
	  instances of the same workflow running; but if it did see other instances of the same workflow running, then
	  it would never force, and after a number of retries would fail. This design was assuming that if multiple instances
	  of this workflow were running, all configuring the policy API, only one should get the lock, and the rest should
	  never force it. However, since implementing the general (non-policy) locks, there is no longer any chance of the 
	  policy activities actually running the policy API at the same time. However we would still observe the workflow
	  occasionally failing because it could not grab the policy API lock. These failures to get the policy API lock were
	  seen when another, 1st instance of the workflow had already completed the policy configuration and, not seeing any
	  queuing workflows on the general lock, would trigger a Policy Enforce for the entire domain, and release the
	  general lock before waiting for that enforce to complete, which, with EXOS switches in the domain, could take
	  minutes. The next, 2nd workflow to run would thus be able to grab the general lock, and would proceed to try and
	  grab the policy API lock, while the Policy Enforce was still running and not completed. If at the same time
	  a 3rd workflow was running (waiting for general lock) the 2nd workflow would never force the policy API lock,
	  and would thus never be able to take it and eventually fail. Whereas if there was no 3rd workflow then the 2nd
	  workflow would be able to take the policy lock, by forcing it, and complete successfully. The logic for the
	  policy API lock is now changed; taking the lock is first tried without forcing and after
	  const_POLICY_APILOCK_FORCE_AT retries (default 2) will try forcing; attempts are performed every
	  const_POLICY_APILOCK_DELAY (default 10) seconds and up to const_POLICY_APILOCK_RETRIES (default 4) retries.
	- Policy Domain enforcement is now by default done only for the single switch (if VOSS, will avoid doing a policy
	  enforce for the whole domain, which if it includes EXOS switches, can take a long time). This can be controlled
	  via const_POLICY_ENFORCE_ONE_DEVICE variable, which is by default true
	- After doing a Policy Domain enforce, script now holds general lock until the policy enforce has completed; the
	  checks to see if the policy enforce has completed are performed every const_POLICY_ENFORCE_CHECK_TIME seconds,
	  by default 10 seconds
	- Since the lock time is now increased by the policy enforce time, the policy lock reservation time is increased
	  from 100sec to 240sec and can now be set via const_POLICY_LOCK_RESERVE_TIME variable
	- Locks for Policy and NAC Enforce are now no longer taken in context of workflow activity name, as this can be
	  different when this workflow is re-spun for EXOS, but instead for custom context names PolicyEnforce & NacEnforce 
v164
	- Policy activity general lock timeout increased from 120sec to default 900 sec (15min) which should be enough
	  for onboarding up to 60 switches at the same time, as each takes about 15sec; the timeout can now also be set
	  by variable const_POLICY_LOCK_TIMEOUT
	- General lock while loop was flawed and would never come out if the lock timeout would expire
	- Policy activity, which use the general lock, will now abort and fail if acquiring the lock times out
	- Add to NAC activity, which use the general lock, will now not perform NAC Enforce if acquiring the lock times out
	- General lock acquireLock now implements randomaized sleep times, to prevent multiple tasks all trying to grab
	  the lock at exactly the same time
v167
	- Python within activities is now versioned, since people are taking the Python code and using it within their
	  own, different workflows
	- Python within activities are now able to set their own const_xxx variables to defaults even if those variables
	  are not defined under workflow variables; for same reason, people are taking the Python code and using it within
	  their own, different workflows which may not have those variables set
	- CLI functions enhances so that failure to connect at first attempt no longer makes the entire workflow fail.
	  Now the CLI will retry by default 6 times at 10 sec intervals; so will only fail if no CLI connection can be
	  established after 1min and 10sec. Defaults can be changed with variables const_CLI_RETRIES and const_CLI_RETRY_DELAY
	- CSV data (file and index) can now be exported to follow on workflow as JSON using launch variable wrkfl_deviceJsonData
	- Changed workflow so that it can take the data for the $<variables> not from a CSV file but directly from
	  either another activity added to the workflow, or by calling this workflow via NBI call. In both cases
	  the new workflow variable wrkfl_deviceJsonData just needs to be set in JSON format to the equivalent data
	  that is extracted from the CSV file; this is so that some customers can hook up the workflow directly with
	  their IPAM database instead of using a CSV file.
	- Added to variable const_EXPORT_EMC_VARS additional emc_vars key deviceNosId
v168
	- Use of CSV file for values was not working properly when workflow manually run against multiple devices
v169
	- Initial validation check of existence of Policy VLAN Island was failing on large Policy domains with more than
	  64 VLAN Islands
v170
	- Bug in API call for fix above, resolved
v171
	- If auto-sense Voice/Data/Wap I-SID is set, any auto-sense ports already in the same corresponding state (VOICE/UNI/FA)
	  are now bounced by toggling poe (if they are delivering poe) or by doing shut/no-shut (otherwise); this to ensure
	  that any already connected devices can be forced to redo DHCP onto the modified auto-sense Voice/Data/Wap I-SIDs;
	  how long the port is kept down is controlled via new variables const_PORT_BOUNCE_DELAY and const_PORT_POE_BOUNCE_DELAY
	  which are by default set to 5 and 1 second respectively
v172
	- Bug in API call for fix above, resolved again!
	- Policy VLAN Island input can now be provided as a site-path (e.g. /World/SiteX), in which case the final site is
	  retained (e.g. SiteX) 
v173 - posted
	- Auto-sense Wait interval now accepts values as low as 2 secs, since the min values is reduced from 10sec to 2sec in 9.3
	- VLAN and I-SID input values now have leading zeros stripped if necessary
	- If input data is fed into variable wrkfl_deviceJsonData, the lookup index is extracted from the same data, under
	  key ["__LOOKUP__"], if present in the data; else it is obtianed from workflow inputs and NBI lookup as usual
	- If a key listed in variable const_EXPORT_EMC_VARS is found to not exist in emc_vars, now a warning message is
	  displayed, instead of failing the workflow. For some of the default keys ("deviceName","deviceSysOid","deviceType",
	  "family",..) this can happen if this workflow is called by one of the Onboard Mgmt VLAN/CLIP/etc.. workflows
	  right after these have re-added the device to XIQ-SE, and XIQ-SE has not had enough time to fully re-discover the
	  device and set those emc_vars keys. If this workflow is not actually using any of those keys as site variables in
	  the template file, it made no sense to fail the workflow. However, if those keys are used on workflow inputs
	  then the workflow will still fail when the variable needs to be replaced; in this case consider increasing the
	  const_FOLLOW_WORKFLOW_DELAY variable on the calling Onboard Mgmt VLAN/CLIP/etc.. workflow to give XIQ-SE enough
	  time to re-discover the device

Todo:



